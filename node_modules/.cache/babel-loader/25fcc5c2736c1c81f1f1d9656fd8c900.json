{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Emanuel\\\\Desktop\\\\DH\\\\frontend 3\\\\entregable-frontend-3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Emanuel\\\\Desktop\\\\DH\\\\frontend 3\\\\entregable-frontend-3\\\\src\\\\components\\\\Item.js\";\n// El componente Item no tiene componentes hijos.\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\n// Maqueta de Item:\n//    h3\n//    p\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\nimport React from \"react\";\nimport { useState } from \"react\";\nexport default function Item(_ref) {\n  var contador = _ref.contador,\n      nombre = _ref.nombre,\n      descripcion = _ref.descripcion,\n      stock = _ref.stock,\n      property = _ref.property;\n\n  var _useState = useState(stock),\n      _useState2 = _slicedToArray(_useState, 2),\n      productoStock = _useState2[0],\n      setProductoStock = _useState2[1];\n\n  var comprar = function comprar() {\n    setProductoStock(function (prevState) {\n      return prevState - 1;\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"producto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, nombre), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, descripcion), /*#__PURE__*/React.createElement(StockDisponible, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, \"En stock: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 38\n    }\n  }, productoStock > 0 ? productoStock : \"AGOTADO\")), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: productoStock === 0,\n    property: StockDisponible,\n    onClick: function onClick() {\n      comprar();\n      contador();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, productoStock === 0 ? \"agotado\" : \"comprar\"));\n}","map":{"version":3,"names":["React","useState","Item","contador","nombre","descripcion","stock","property","productoStock","setProductoStock","comprar","prevState","StockDisponible"],"sources":["C:/Users/Emanuel/Desktop/DH/frontend 3/entregable-frontend-3/src/components/Item.js"],"sourcesContent":["// El componente Item no tiene componentes hijos.\r\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\r\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\r\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\r\n// Maqueta de Item:\r\n//    h3\r\n//    p\r\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\r\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\r\nimport React from \"react\";\r\nimport { useState} from \"react\";\r\n\r\nexport default function Item({contador, nombre, descripcion, stock, property}) {\r\n  const [productoStock, setProductoStock] = useState(stock);\r\n  const comprar =()=>{\r\n    setProductoStock(prevState => prevState -1)}\r\n  return (\r\n    <div className='producto'>\r\n    <h3>{nombre}</h3>\r\n          <p>{descripcion}</p>\r\n          <StockDisponible>En stock: <span>{productoStock > 0? productoStock: \"AGOTADO\"}</span></StockDisponible>\r\n          <button disabled={productoStock === 0} property={StockDisponible} onClick={() => {comprar();contador()}}>{productoStock === 0 ? \"agotado\" :\"comprar\"}</button>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAwB,OAAxB;AAEA,eAAe,SAASC,IAAT,OAAgE;EAAA,IAAjDC,QAAiD,QAAjDA,QAAiD;EAAA,IAAvCC,MAAuC,QAAvCA,MAAuC;EAAA,IAA/BC,WAA+B,QAA/BA,WAA+B;EAAA,IAAlBC,KAAkB,QAAlBA,KAAkB;EAAA,IAAXC,QAAW,QAAXA,QAAW;;EAAA,gBACnCN,QAAQ,CAACK,KAAD,CAD2B;EAAA;EAAA,IACtEE,aADsE;EAAA,IACvDC,gBADuD;;EAE7E,IAAMC,OAAO,GAAE,SAATA,OAAS,GAAI;IACjBD,gBAAgB,CAAC,UAAAE,SAAS;MAAA,OAAIA,SAAS,GAAE,CAAf;IAAA,CAAV,CAAhB;EAA4C,CAD9C;;EAEA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACA;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAKP,MAAL,CADA,eAEM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAIC,WAAJ,CAFN,eAGM,oBAAC,eAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,8BAA2B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAOG,aAAa,GAAG,CAAhB,GAAmBA,aAAnB,GAAkC,SAAzC,CAA3B,CAHN,eAIM;IAAQ,QAAQ,EAAEA,aAAa,KAAK,CAApC;IAAuC,QAAQ,EAAEI,eAAjD;IAAkE,OAAO,EAAE,mBAAM;MAACF,OAAO;MAAGP,QAAQ;IAAG,CAAvG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA0GK,aAAa,KAAK,CAAlB,GAAsB,SAAtB,GAAiC,SAA3I,CAJN,CADF;AAQD"},"metadata":{},"sourceType":"module"}